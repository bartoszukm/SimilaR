// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// checkPlagiarism_gplag_cpp_list_kernel2_test
List checkPlagiarism_gplag_cpp_list_kernel2_test(List parses, int h, NumericVector sums);
RcppExport SEXP _SimilaR_checkPlagiarism_gplag_cpp_list_kernel2_test(SEXP parsesSEXP, SEXP hSEXP, SEXP sumsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type parses(parsesSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sums(sumsSEXP);
    rcpp_result_gen = Rcpp::wrap(checkPlagiarism_gplag_cpp_list_kernel2_test(parses, h, sums));
    return rcpp_result_gen;
END_RCPP
}
// generateDataFrame_one_rcpp
DataFrame generateDataFrame_one_rcpp(NumericMatrix matKernel2, CharacterVector functionNames);
RcppExport SEXP _SimilaR_generateDataFrame_one_rcpp(SEXP matKernel2SEXP, SEXP functionNamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matKernel2(matKernel2SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type functionNames(functionNamesSEXP);
    rcpp_result_gen = Rcpp::wrap(generateDataFrame_one_rcpp(matKernel2, functionNames));
    return rcpp_result_gen;
END_RCPP
}
// generateDataFrame_one_both_rcpp
DataFrame generateDataFrame_one_both_rcpp(NumericMatrix matKernel2, CharacterVector functionNames);
RcppExport SEXP _SimilaR_generateDataFrame_one_both_rcpp(SEXP matKernel2SEXP, SEXP functionNamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matKernel2(matKernel2SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type functionNames(functionNamesSEXP);
    rcpp_result_gen = Rcpp::wrap(generateDataFrame_one_both_rcpp(matKernel2, functionNames));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SimilaR_checkPlagiarism_gplag_cpp_list_kernel2_test", (DL_FUNC) &_SimilaR_checkPlagiarism_gplag_cpp_list_kernel2_test, 3},
    {"_SimilaR_generateDataFrame_one_rcpp", (DL_FUNC) &_SimilaR_generateDataFrame_one_rcpp, 2},
    {"_SimilaR_generateDataFrame_one_both_rcpp", (DL_FUNC) &_SimilaR_generateDataFrame_one_both_rcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SimilaR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
